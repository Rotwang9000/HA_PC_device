[
	{
		"id": "8eeda7c0e58ce6fe",
		"type": "subflow",
		"name": "Get Entity State REST (1)",
		"info": "",
		"category": "",
		"in": [
			{
				"x": 60,
				"y": 80,
				"wires": [
					{
						"id": "a5aa4552a9041489"
					}
				]
			}
		],
		"out": [
			{
				"x": 780,
				"y": 180,
				"wires": [
					{
						"id": "160a4587c18d0c1b",
						"port": 0
					}
				]
			}
		],
		"env": [
			{
				"name": "HA_API_URL",
				"type": "str",
				"value": "http://localhost:8123/api"
			},
			{
				"name": "HA_API_TOKEN",
				"type": "str",
				"value": "your-api-token-here"
			}
		],
		"meta": {},
		"color": "#DDAA99"
	},
	{
		"id": "a5aa4552a9041489",
		"type": "change",
		"z": "8eeda7c0e58ce6fe",
		"name": "Set API URL",
		"rules": [
			{
				"t": "set",
				"p": "url",
				"pt": "msg",
				"to": "$env('HA_API_URL') & \"/states/\" & $$.entity_id",
				"tot": "jsonata"
			},
			{
				"t": "set",
				"p": "headers",
				"pt": "msg",
				"to": "{\"Authorization\": \"Bearer \" & $env('HA_API_TOKEN'), \"Content-Type\": \"application/json\"}",
				"tot": "jsonata"
			}
		],
		"action": "",
		"property": "",
		"from": "",
		"to": "",
		"reg": false,
		"x": 350,
		"y": 80,
		"wires": [
			[
				"5492124e34b71983"
			]
		]
	},
	{
		"id": "5492124e34b71983",
		"type": "http request",
		"z": "8eeda7c0e58ce6fe",
		"name": "",
		"method": "GET",
		"ret": "obj",
		"paytoqs": "ignore",
		"url": "",
		"tls": "",
		"persist": false,
		"proxy": "",
		"insecureHTTPParser": false,
		"authType": "",
		"senderr": false,
		"headers": [],
		"x": 550,
		"y": 100,
		"wires": [
			[
				"160a4587c18d0c1b"
			]
		]
	},
	{
		"id": "160a4587c18d0c1b",
		"type": "change",
		"z": "8eeda7c0e58ce6fe",
		"name": "Parse Response",
		"rules": [
			{
				"t": "set",
				"p": "attributes",
				"pt": "msg",
				"to": "$exists(payload.attributes)? payload.attributes: {}",
				"tot": "jsonata",
				"dc": true
			},
			{
				"t": "set",
				"p": "payload",
				"pt": "msg",
				"to": "payload.state",
				"tot": "msg"
			},
			{
				"t": "set",
				"p": "data",
				"pt": "msg",
				"to": "$exists(data)? data: {}\t",
				"tot": "jsonata"
			}
		],
		"action": "",
		"property": "",
		"from": "",
		"to": "",
		"reg": false,
		"x": 490,
		"y": 260,
		"wires": [
			[]
		]
	},
	{
		"id": "d8cfddba5c4a2613",
		"type": "tab",
		"label": "Flow 2",
		"disabled": false,
		"info": "",
		"env": []
	},
	{
		"id": "bcca4591652a9a9c",
		"type": "switch",
		"z": "d8cfddba5c4a2613",
		"name": "Light ON/OFF",
		"property": "payload",
		"propertyType": "msg",
		"rules": [
			{
				"t": "eq",
				"v": "ON",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "OFF",
				"vt": "str"
			}
		],
		"repair": false,
		"outputs": 2,
		"x": 660,
		"y": 160,
		"wires": [
			[
				"c3a4ccf9653e75e5"
			],
			[
				"7700d65d9dba2ad8"
			]
		]
	},
	{
		"id": "c3a4ccf9653e75e5",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Turn On Light",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "light.turn_on",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": false,
		"domain": "light",
		"service": "turn_on",
		"x": 840,
		"y": 120,
		"wires": [
			[]
		]
	},
	{
		"id": "7700d65d9dba2ad8",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Turn Off Light",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "light.turn_off",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": false,
		"domain": "light",
		"service": "turn_off",
		"x": 840,
		"y": 160,
		"wires": [
			[]
		]
	},
	{
		"id": "8d90f016acba65ba",
		"type": "switch",
		"z": "d8cfddba5c4a2613",
		"name": "TV ON/OFF",
		"property": "payload",
		"propertyType": "msg",
		"rules": [
			{
				"t": "eq",
				"v": "ON",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "OFF",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "PLAYPAUSE",
				"vt": "str"
			}
		],
		"repair": false,
		"outputs": 3,
		"x": 770,
		"y": 360,
		"wires": [
			[
				"2412319021d44ed9"
			],
			[
				"6f2dfaa86ae14971"
			],
			[
				"37427b4640c34f47"
			]
		]
	},
	{
		"id": "2412319021d44ed9",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Turn On TV",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "media_player.turn_on",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": false,
		"domain": "media_player",
		"service": "turn_on",
		"x": 970,
		"y": 220,
		"wires": [
			[]
		]
	},
	{
		"id": "6f2dfaa86ae14971",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Turn Off TV",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "media_player.turn_off",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": false,
		"domain": "media_player",
		"service": "turn_off",
		"x": 970,
		"y": 280,
		"wires": [
			[]
		]
	},
	{
		"id": "d3d35bcc1129175a",
		"type": "mqtt in",
		"z": "d8cfddba5c4a2613",
		"name": "Request State",
		"topic": "homeassistant/+/+/request_state",
		"qos": "2",
		"datatype": "auto-detect",
		"broker": "93e8dd50b41a1c38",
		"nl": false,
		"rap": false,
		"inputs": 0,
		"x": 90,
		"y": 620,
		"wires": [
			[
				"f382a665acab5ad4"
			]
		]
	},
	{
		"id": "f382a665acab5ad4",
		"type": "change",
		"z": "d8cfddba5c4a2613",
		"name": "Extract Entity",
		"rules": [
			{
				"t": "set",
				"p": "entity_id",
				"pt": "msg",
				"to": "$split(topic, \"/\")[2]",
				"tot": "jsonata"
			},
			{
				"t": "set",
				"p": "domain",
				"pt": "msg",
				"to": "$split(topic, \"/\")[1]",
				"tot": "jsonata"
			}
		],
		"action": "",
		"property": "",
		"from": "",
		"to": "",
		"reg": false,
		"x": 90,
		"y": 740,
		"wires": [
			[
				"509bc3efd8427eb2"
			]
		]
	},
	{
		"id": "1442b1d5bf52d364",
		"type": "mqtt in",
		"z": "d8cfddba5c4a2613",
		"name": "Attribute In",
		"topic": "homeassistant/+/+/+",
		"qos": "2",
		"datatype": "auto-detect",
		"broker": "93e8dd50b41a1c38",
		"nl": false,
		"rap": false,
		"inputs": 0,
		"x": 160,
		"y": 120,
		"wires": [
			[
				"bebd60bc52d08c47"
			]
		]
	},
	{
		"id": "bebd60bc52d08c47",
		"type": "change",
		"z": "d8cfddba5c4a2613",
		"name": "Extract Entity",
		"rules": [
			{
				"t": "set",
				"p": "entity_id",
				"pt": "msg",
				"to": "$split(topic, \"/\")[2]",
				"tot": "jsonata"
			},
			{
				"t": "set",
				"p": "domain",
				"pt": "msg",
				"to": "$split(topic, \"/\")[1]",
				"tot": "jsonata"
			},
			{
				"t": "set",
				"p": "command",
				"pt": "msg",
				"to": "$split(topic, \"/\")[3]",
				"tot": "jsonata"
			}
		],
		"action": "",
		"property": "",
		"from": "",
		"to": "",
		"reg": false,
		"x": 150,
		"y": 180,
		"wires": [
			[
				"dded65855dd56ede",
				"d197969716f5c37a"
			]
		]
	},
	{
		"id": "fc8bd137bdfe24b1",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Set Brightness",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "light.turn_on",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id, \"brightness\": $number($$.payload)}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": false,
		"domain": "light",
		"service": "turn_on",
		"x": 660,
		"y": 80,
		"wires": [
			[]
		]
	},
	{
		"id": "9a0c93491f840960",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Set HS",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "light.turn_on",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id, \"hs_color\": [$split($$.payload, \",\")[0], $split($$.payload, \",\")[1]]}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": false,
		"domain": "light",
		"service": "turn_on",
		"x": 640,
		"y": 120,
		"wires": [
			[]
		]
	},
	{
		"id": "ac4020b8e45c8584",
		"type": "function",
		"z": "d8cfddba5c4a2613",
		"name": "Combine Response",
		"func": "// Check if this is a computer entity\nif (msg.entity_id && msg.entity_id.startsWith(\"computer.\")) {\n    const computerName = msg.entity_id.split(\".\")[1].toLowerCase();\n    \n    // Create multiple MQTT messages for different computer attributes\n    const messages = [];\n    \n    // Session state\n    messages.push({\n        topic: `homeassistant/sensor/${computerName}/${computerName}_sessionstate/state`,\n        payload: msg.payload, // on/off/locked/unlocked\n        qos: 2\n    });\n    \n    // Current volume\n    if (msg.attributes.volume_level !== undefined) {\n        const volumeLevel = Math.round(msg.attributes.volume_level * 100);\n        messages.push({\n            topic: `homeassistant/sensor/${computerName}/${computerName}_currentvolume/state`,\n            payload: volumeLevel.toString(),\n            qos: 2\n        });\n    }\n    \n    // Active window\n    if (msg.attributes.activewindow !== undefined) {\n        messages.push({\n            topic: `homeassistant/sensor/${computerName}/${computerName}_activewindow/state`,\n            payload: msg.attributes.activewindow,\n            qos: 2\n        });\n    }\n    \n    // Enforce lock state\n    if (msg.attributes.enforce_lock !== undefined) {\n        messages.push({\n            topic: `homeassistant/switch/${computerName}/${computerName}_enforce_lock/state`,\n            payload: msg.attributes.enforce_lock ? \"ON\" : \"OFF\",\n            qos: 2\n        });\n    }\n    \n    return [messages];\n} else {\n    // Handle traditional entities (light and media_player)\n    msg.payload = {\n        \"entity_id\": msg.entity_id,\n        \"state\": msg.payload,\n        \"brightness\": msg.attributes.brightness || null,\n        \"hs_color\": msg.attributes.hs_color || null,\n        \"volume_level\": msg.attributes.volume_level || null,\n        \"source\": msg.attributes.source || null\n    };\n    msg.topic = \"homeassistant/\" + msg.domain + \"/\" + msg.entity_id + \"/update\";\n    return msg;\n}",
		"outputs": 1,
		"timeout": 0,
		"noerr": 0,
		"initialize": "",
		"finalize": "",
		"libs": [],
		"x": 830,
		"y": 820,
		"wires": [
			[
				"87a328ed1f41e601",
				"fa1e5e8317bec211"
			]
		]
	},
	{
		"id": "87a328ed1f41e601",
		"type": "mqtt out",
		"z": "d8cfddba5c4a2613",
		"name": "",
		"topic": "",
		"qos": "2",
		"retain": "",
		"respTopic": "",
		"contentType": "",
		"userProps": "",
		"correl": "",
		"expiry": "",
		"broker": "93e8dd50b41a1c38",
		"x": 1050,
		"y": 800,
		"wires": []
	},
	{
		"id": "fa1e5e8317bec211",
		"type": "debug",
		"z": "d8cfddba5c4a2613",
		"name": "debug 5",
		"active": true,
		"tosidebar": true,
		"console": false,
		"tostatus": false,
		"complete": "true",
		"targetType": "full",
		"statusVal": "",
		"statusType": "auto",
		"x": 940,
		"y": 700,
		"wires": []
	},
	{
		"id": "c138b291745f66fb",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Set Volume",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "computer.set_volume_level",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id, \"volume_level\": $number($$.payload)}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": false,
		"domain": "computer",
		"service": "set_volume_level",
		"x": 650,
		"y": 220,
		"wires": [
			[]
		]
	},
	{
		"id": "53e922b7ebc3d666",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Select Source",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "media_player.select_source",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id, \"source\": $$.payload}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": false,
		"domain": "media_player",
		"service": "select_source",
		"x": 740,
		"y": 280,
		"wires": [
			[]
		]
	},
	{
		"id": "dded65855dd56ede",
		"type": "switch",
		"z": "d8cfddba5c4a2613",
		"name": "Check Domain",
		"property": "domain",
		"propertyType": "msg",
		"rules": [
			{
				"t": "eq",
				"v": "light",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "media_player",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "Computer",
				"vt": "str"
			}
		],
		"checkall": "false",
		"repair": false,
		"outputs": 3,
		"x": 140,
		"y": 280,
		"wires": [
			[
				"6f85c3be63919028"
			],
			[
				"2698c4764126e54c"
			],
			[
				"4ca9151491a00740"
			]
		]
	},
	{
		"id": "37427b4640c34f47",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "PlayPause",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "media_player.media_play_pause",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": true,
		"domain": "media_player",
		"service": "media_play_pause",
		"x": 970,
		"y": 380,
		"wires": [
			[]
		]
	},
	{
		"id": "fabe9b290af3c3e3",
		"type": "server-state-changed",
		"z": "d8cfddba5c4a2613",
		"name": "State Changes",
		"server": "c8bf64e0.ee9788",
		"version": 6,
		"outputs": 1,
		"exposeAsEntityConfig": "",
		"entities": {
			"entity": [
				"light.gold_light_2",
				"light.led_flood_light",
				"media_player.lgnano_55",
				"computer.felixlaptop",
				"sensor.felixlaptop_felixlaptop_currentvolume",
				"sensor.felixlaptop_felixlaptop_activewindow",
				"sensor.felixlaptop_felixlaptop_sessionstate",
				"switch.felixlaptop_felixlaptop_enforce_lock"
			],
			"substring": [],
			"regex": []
		},
		"outputInitially": false,
		"stateType": "str",
		"ifState": "",
		"ifStateType": "str",
		"ifStateOperator": "is",
		"outputOnlyOnStateChange": true,
		"for": "0",
		"forType": "num",
		"forUnits": "minutes",
		"ignorePrevStateNull": false,
		"ignorePrevStateUnknown": false,
		"ignorePrevStateUnavailable": false,
		"ignoreCurrentStateUnknown": false,
		"ignoreCurrentStateUnavailable": false,
		"outputProperties": [
			{
				"property": "payload",
				"propertyType": "msg",
				"value": "",
				"valueType": "entityState"
			},
			{
				"property": "data",
				"propertyType": "msg",
				"value": "",
				"valueType": "eventData"
			},
			{
				"property": "topic",
				"propertyType": "msg",
				"value": "",
				"valueType": "triggerId"
			},
			{
				"property": "entity_id",
				"propertyType": "msg",
				"value": "",
				"valueType": "triggerId"
			}
		],
		"x": 300,
		"y": 560,
		"wires": [
			[
				"509bc3efd8427eb2",
				"8f3a918de72c3a17"
			]
		]
	},
	{
		"id": "6f85c3be63919028",
		"type": "switch",
		"z": "d8cfddba5c4a2613",
		"name": "Check Command",
		"property": "command",
		"propertyType": "msg",
		"rules": [
			{
				"t": "eq",
				"v": "brightness",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "hs",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "set",
				"vt": "str"
			}
		],
		"checkall": "false",
		"repair": false,
		"outputs": 3,
		"x": 410,
		"y": 160,
		"wires": [
			[
				"fc8bd137bdfe24b1"
			],
			[
				"9a0c93491f840960"
			],
			[
				"bcca4591652a9a9c"
			]
		]
	},
	{
		"id": "2698c4764126e54c",
		"type": "switch",
		"z": "d8cfddba5c4a2613",
		"name": "Check Media Command",
		"property": "command",
		"propertyType": "msg",
		"rules": [
			{
				"t": "eq",
				"v": "volume",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "source",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "set",
				"vt": "str"
			}
		],
		"checkall": "true",
		"repair": false,
		"outputs": 3,
		"x": 430,
		"y": 240,
		"wires": [
			[
				"c138b291745f66fb"
			],
			[
				"53e922b7ebc3d666"
			],
			[
				"8d90f016acba65ba"
			]
		]
	},
	{
		"id": "509bc3efd8427eb2",
		"type": "subflow:8eeda7c0e58ce6fe",
		"z": "d8cfddba5c4a2613",
		"name": "",
		"env": [
			{
				"name": "HA_API_TOKEN",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiI0OTViZjZjMTkzN2U0YzYwOTc0ZmM2NTgxMWRkZTdlZiIsImlhdCI6MTc0NTQ5MzQ0NiwiZXhwIjoyMDYwODUzNDQ2fQ.kIOvABiiXHF0mmd8BPMt-FJCmPJ8MrkmoGtzEkXp-AU",
				"type": "str"
			}
		],
		"x": 390,
		"y": 780,
		"wires": [
			[
				"ac4020b8e45c8584"
			]
		]
	},
	{
		"id": "4ca9151491a00740",
		"type": "switch",
		"z": "d8cfddba5c4a2613",
		"name": "Check Computer Command",
		"property": "command",
		"propertyType": "msg",
		"rules": [
			{
				"t": "eq",
				"v": "set",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "lock",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "mute",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "setvolume",
				"vt": "str"
			}
		],
		"checkall": "true",
		"repair": false,
		"outputs": 4,
		"x": 420,
		"y": 340,
		"wires": [
			[
				"9245ffd4161179ba"
			],
			[
				"80a17a97a77da1b0"
			],
			[
				"23eb2d487e66fa9f"
			],
			[
				"0af2c78096e77150"
			]
		]
	},
	{
		"id": "9245ffd4161179ba",
		"type": "switch",
		"z": "d8cfddba5c4a2613",
		"name": "ON/OFF",
		"property": "payload",
		"propertyType": "msg",
		"rules": [
			{
				"t": "eq",
				"v": "ON",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "OFF",
				"vt": "str"
			}
		],
		"checkall": "false",
		"repair": false,
		"outputs": 2,
		"x": 760,
		"y": 420,
		"wires": [
			[
				"9e73379bad43ad38"
			],
			[
				"7c8edd2eb8bbf815"
			]
		]
	},
	{
		"id": "9e73379bad43ad38",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Turn On Computer",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "computer.turn_on",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": true,
		"domain": "computer",
		"service": "turn_on",
		"x": 940,
		"y": 400,
		"wires": [
			[]
		]
	},
	{
		"id": "7c8edd2eb8bbf815",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Turn Off Computer",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "computer.turn_off",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": true,
		"domain": "computer",
		"service": "turn_off",
		"x": 940,
		"y": 440,
		"wires": [
			[]
		]
	},
	{
		"id": "80a17a97a77da1b0",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Toggle Enforce Lock",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "computer.toggle_enforce_lock",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": true,
		"domain": "computer",
		"service": "toggle_enforce_lock",
		"x": 730,
		"y": 480,
		"wires": [
			[]
		]
	},
	{
		"id": "23eb2d487e66fa9f",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Toggle Mute",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "computer.toggle_mute",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": true,
		"domain": "computer",
		"service": "toggle_mute",
		"x": 730,
		"y": 520,
		"wires": [
			[]
		]
	},
	{
		"id": "0af2c78096e77150",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Set Volume",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "computer.set_volume_level",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id, \"volume_level\": $number($$.payload)}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": true,
		"domain": "computer",
		"service": "set_volume_level",
		"x": 710,
		"y": 560,
		"wires": [
			[]
		]
	},
	{
		"id": "d197969716f5c37a",
		"type": "debug",
		"z": "d8cfddba5c4a2613",
		"name": "debug 1",
		"active": true,
		"tosidebar": true,
		"console": false,
		"tostatus": false,
		"complete": "false",
		"statusVal": "",
		"statusType": "auto",
		"x": 380,
		"y": 100,
		"wires": []
	},
	{
		"id": "c8bf64e0.ee9788",
		"type": "server",
		"name": "Home Assistant",
		"addon": true
	},
	{
		"id": "93e8dd50b41a1c38",
		"type": "mqtt-broker",
		"name": "HA",
		"broker": "localhost",
		"port": 1883,
		"clientid": "",
		"autoConnect": true,
		"usetls": false,
		"protocolVersion": "5",
		"keepalive": 60,
		"cleansession": true,
		"autoUnsubscribe": true,
		"birthTopic": "",
		"birthQos": "0",
		"birthRetain": "false",
		"birthPayload": "",
		"birthMsg": {},
		"closeTopic": "",
		"closeQos": "0",
		"closeRetain": "false",
		"closePayload": "",
		"closeMsg": {},
		"willTopic": "",
		"willQos": "0",
		"willRetain": "false",
		"willPayload": "",
		"willMsg": {},
		"userProps": "",
		"sessionExpiry": ""
	},
	{
		"id": "be62a5d7f8a45c29",
		"type": "mqtt in",
		"z": "d8cfddba5c4a2613",
		"name": "Computer Button Actions",
		"topic": "homeassistant/button/+/+/press",
		"qos": "2",
		"datatype": "auto-detect",
		"broker": "93e8dd50b41a1c38",
		"nl": false,
		"rap": false,
		"inputs": 0,
		"x": 110,
		"y": 320,
		"wires": [
			[
				"e3a891cef4531a27"
			]
		]
	},
	{
		"id": "e3a891cef4531a27",
		"type": "change",
		"z": "d8cfddba5c4a2613",
		"name": "Extract Computer Action",
		"rules": [
			{
				"t": "set",
				"p": "computerName",
				"pt": "msg",
				"to": "$split(topic, \"/\")[2]",
				"tot": "jsonata"
			},
			{
				"t": "set",
				"p": "action",
				"pt": "msg",
				"to": "$split($split(topic, \"/\")[3], \"_\")[1]",
				"tot": "jsonata"
			}
		],
		"action": "",
		"property": "",
		"from": "",
		"to": "",
		"reg": false,
		"x": 340,
		"y": 320,
		"wires": [
			[
				"0e9a63fe2c82a14f"
			]
		]
	},
	{
		"id": "0e9a63fe2c82a14f",
		"type": "switch",
		"z": "d8cfddba5c4a2613",
		"name": "Action Type",
		"property": "action",
		"propertyType": "msg",
		"rules": [
			{
				"t": "eq",
				"v": "lock",
				"vt": "str"
			},
			{
				"t": "eq",
				"v": "mute",
				"vt": "str"
			}
		],
		"checkall": "false",
		"repair": false,
		"outputs": 2,
		"x": 550,
		"y": 320,
		"wires": [
			[
				"51e8b3a79a82c109"
			],
			[
				"6bcd829a1423e217"
			]
		]
	},
	{
		"id": "51e8b3a79a82c109",
		"type": "function",
		"z": "d8cfddba5c4a2613",
		"name": "Prepare Lock Action",
		"func": "msg.entity_id = \"computer.\" + msg.computerName;\nreturn msg;",
		"outputs": 1,
		"timeout": 0,
		"noerr": 0,
		"initialize": "",
		"finalize": "",
		"libs": [],
		"x": 750,
		"y": 280,
		"wires": [
			[
				"80a17a97a77da1b0"
			]
		]
	},
	{
		"id": "6bcd829a1423e217",
		"type": "function",
		"z": "d8cfddba5c4a2613",
		"name": "Prepare Mute Action",
		"func": "msg.entity_id = \"computer.\" + msg.computerName;\nreturn msg;",
		"outputs": 1,
		"timeout": 0,
		"noerr": 0,
		"initialize": "",
		"finalize": "",
		"libs": [],
		"x": 750,
		"y": 320,
		"wires": [
			[
				"23eb2d487e66fa9f"
			]
		]
	},
	{
		"id": "fd93ef7c82a97f21",
		"type": "mqtt in",
		"z": "d8cfddba5c4a2613",
		"name": "Volume Actions",
		"topic": "homeassistant/button/+/+_setvolume/action",
		"qos": "2",
		"datatype": "auto-detect",
		"broker": "93e8dd50b41a1c38",
		"nl": false,
		"rap": false,
		"inputs": 0,
		"x": 100,
		"y": 380,
		"wires": [
			[
				"7b8a23a9f4d2a128"
			]
		]
	},
	{
		"id": "7b8a23a9f4d2a128",
		"type": "change",
		"z": "d8cfddba5c4a2613",
		"name": "Extract Computer and Volume",
		"rules": [
			{
				"t": "set",
				"p": "computerName",
				"pt": "msg",
				"to": "$split(topic, \"/\")[2]",
				"tot": "jsonata"
			},
			{
				"t": "set",
				"p": "volumeLevel",
				"pt": "msg",
				"to": "$number(payload)",
				"tot": "jsonata"
			}
		],
		"action": "",
		"property": "",
		"from": "",
		"to": "",
		"reg": false,
		"x": 350,
		"y": 380,
		"wires": [
			[
				"3fa23cdf82a1d827"
			]
		]
	},
	{
		"id": "3fa23cdf82a1d827",
		"type": "function",
		"z": "d8cfddba5c4a2613",
		"name": "Prepare Volume Action",
		"func": "msg.entity_id = \"computer.\" + msg.computerName;\nmsg.payload = msg.volumeLevel / 100; // Convert to 0-1.0 range\nreturn msg;",
		"outputs": 1,
		"timeout": 0,
		"noerr": 0,
		"initialize": "",
		"finalize": "",
		"libs": [],
		"x": 580,
		"y": 380,
		"wires": [
			[
				"0af2c78096e77150"
			]
		]
	},
	{
		"id": "a9e7c3ef81a2d901",
		"type": "mqtt in",
		"z": "d8cfddba5c4a2613",
		"name": "Power Actions",
		"topic": "homeassistant/switch/+/+_power/set",
		"qos": "2",
		"datatype": "auto-detect",
		"broker": "93e8dd50b41a1c38",
		"nl": false,
		"rap": false,
		"inputs": 0,
		"x": 100,
		"y": 440,
		"wires": [
			[
				"b2c71f3928a3e129"
			]
		]
	},
	{
		"id": "b2c71f3928a3e129",
		"type": "change",
		"z": "d8cfddba5c4a2613",
		"name": "Extract Computer and Power Action",
		"rules": [
			{
				"t": "set",
				"p": "computerName",
				"pt": "msg",
				"to": "$split(topic, \"/\")[2]",
				"tot": "jsonata"
			},
			{
				"t": "set",
				"p": "powerState",
				"pt": "msg",
				"to": "payload",
				"tot": "msg"
			}
		],
		"action": "",
		"property": "",
		"from": "",
		"to": "",
		"reg": false,
		"x": 350,
		"y": 440,
		"wires": [
			[
				"8e712fc391a2d817"
			]
		]
	},
	{
		"id": "8e712fc391a2d817",
		"type": "function",
		"z": "d8cfddba5c4a2613",
		"name": "Prepare Power Action",
		"func": "msg.entity_id = \"computer.\" + msg.computerName;\nmsg.payload = msg.powerState;\nreturn msg;",
		"outputs": 1,
		"timeout": 0,
		"noerr": 0,
		"initialize": "",
		"finalize": "",
		"libs": [],
		"x": 580,
		"y": 440,
		"wires": [
			[
				"9245ffd4161179ba"
			]
		]
	},
	{
		"id": "63a58e29a1b9d726",
		"type": "mqtt in",
		"z": "d8cfddba5c4a2613",
		"name": "Enforce Lock Actions",
		"topic": "homeassistant/switch/+/+_enforce_lock/set",
		"qos": "2",
		"datatype": "auto-detect",
		"broker": "93e8dd50b41a1c38",
		"nl": false,
		"rap": false,
		"inputs": 0,
		"x": 120,
		"y": 500,
		"wires": [
			[
				"d82a7f192c8a1927"
			]
		]
	},
	{
		"id": "d82a7f192c8a1927",
		"type": "change",
		"z": "d8cfddba5c4a2613",
		"name": "Extract Computer and Lock Action",
		"rules": [
			{
				"t": "set",
				"p": "computerName",
				"pt": "msg",
				"to": "$split(topic, \"/\")[2]",
				"tot": "jsonata"
			},
			{
				"t": "set",
				"p": "enforceLockState",
				"pt": "msg",
				"to": "payload",
				"tot": "msg"
			}
		],
		"action": "",
		"property": "",
		"from": "",
		"to": "",
		"reg": false,
		"x": 350,
		"y": 500,
		"wires": [
			[
				"c82a9f192a87d128"
			]
		]
	},
	{
		"id": "c82a9f192a87d128",
		"type": "function",
		"z": "d8cfddba5c4a2613",
		"name": "Prepare Enforce Lock Action",
		"func": "msg.entity_id = \"computer.\" + msg.computerName;\nreturn msg;",
		"outputs": 1,
		"timeout": 0,
		"noerr": 0,
		"initialize": "",
		"finalize": "",
		"libs": [],
		"x": 590,
		"y": 500,
		"wires": [
			[
				"a18d9f3c28a7d129"
			]
		]
	},
	{
		"id": "a18d9f3c28a7d129",
		"type": "api-call-service",
		"z": "d8cfddba5c4a2613",
		"name": "Set Enforce Lock",
		"server": "c8bf64e0.ee9788",
		"version": 7,
		"debugenabled": false,
		"action": "computer.set_enforce_lock",
		"floorId": [],
		"areaId": [],
		"deviceId": [],
		"entityId": [],
		"labelId": [],
		"data": "{\"entity_id\": $$.entity_id, \"enforce_lock\": $$.enforceLockState === \"ON\"}",
		"dataType": "jsonata",
		"mergeContext": "",
		"mustacheAltTags": false,
		"outputProperties": [],
		"queue": "none",
		"blockInputOverrides": true,
		"domain": "computer",
		"service": "set_enforce_lock",
		"x": 790,
		"y": 500,
		"wires": [
			[]
		]
	},
	{
		"id": "8f3a918de72c3a17",
		"type": "function",
		"z": "d8cfddba5c4a2613",
		"name": "Process Computer Sensor Updates",
		"func": "// Check if it's a direct format entity\nif (msg.entity_id && (msg.entity_id.includes('_currentvolume') || \n                      msg.entity_id.includes('_activewindow') || \n                      msg.entity_id.includes('_sessionstate') || \n                      msg.entity_id.includes('_enforce_lock'))) {\n    \n    // Extract computer name from entity ID\n    const parts = msg.entity_id.split('_');\n    const computerName = parts[0].split('.')[1];\n    \n    // Create the base topic path\n    let topic = '';\n    let payload = msg.payload;\n    \n    // Determine which type of sensor it is\n    if (msg.entity_id.includes('_currentvolume')) {\n        topic = `homeassistant/sensor/${computerName}/${computerName}_currentvolume/state`;\n    } else if (msg.entity_id.includes('_activewindow')) {\n        topic = `homeassistant/sensor/${computerName}/${computerName}_activewindow/state`;\n    } else if (msg.entity_id.includes('_sessionstate')) {\n        topic = `homeassistant/sensor/${computerName}/${computerName}_sessionstate/state`;\n    } else if (msg.entity_id.includes('_enforce_lock')) {\n        topic = `homeassistant/switch/${computerName}/${computerName}_enforce_lock/state`;\n        payload = msg.payload === 'on' ? 'ON' : 'OFF';\n    }\n    \n    if (topic) {\n        return {\n            topic: topic,\n            payload: payload,\n            qos: 2\n        };\n    }\n}\n\nreturn null;",
		"outputs": 1,
		"timeout": 0,
		"noerr": 0,
		"initialize": "",
		"finalize": "",
		"libs": [],
		"x": 550,
		"y": 600,
		"wires": [
			[
				"87a328ed1f41e601"
			]
		]
	}
]